
.form-wrapper {
  display: flex;
  flex-flow: column nowrap;
  height: 100%;
  background-color: var(--secondary-color);
  position: relative;
  justify-content: center;
  align-items: center;

  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 5;
    background-color: var(--secondary-color);
    background: url("~/assets/img/form-background.jpg");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    opacity: 0.7;
  }

  & > form {
    z-index: 10;
    display: flex;
    flex-flow: column nowrap;
    gap:.5em;
    background-color: var(--regular-glass);
    padding: 3em 2em;
    border-radius: var(--bordered);
    width: min(500px, 100%);
    backdrop-filter: blur(10px);

    & legend {
        color: var(--light-color);
        font-size: 2em;
        font-weight: bolder;
        text-transform: capitalize;
    }

    & fieldset {
        flex: 1;
        display: flex;
        flex-flow: column nowrap;
        gap: .5em;


        & span {
          align-self: flex-end;
          color: var(--light-color);
          padding: .5em 0;
        }

        & a {
          font-weight: bolder;
        }
    }

  }

  & input[type="text"],
  input[type="button"] {
    width: 100%;
  }
}

input::placeholder {
  color: var(--light-color);
  font-weight: bold;
}

input[type="button"] {
  padding: 1em;
  min-width: 100px;
  border-radius: var(--bordered);
  font-weight: bolder;
  color: var(--light-color);
  font-size: 1.1em;

  &:hover {
    filter: hue-rotate(2deg);
    cursor: pointer;
  }
}

input[type="text"], input[type="password"] {
  background-color: var(--regular-glass);
  backdrop-filter: blur(2px);
  padding: 1em;
  min-width: 100px;
  color: var(--light-color);
  font-weight: bold;
  border-radius: var(--bordered);
}

a.link-button {
  background-color: var(--primary-color);
  color: var(--light-color);
  display: flex;
  text-align: center;
  justify-content: center;
  align-items: center;
  height: var(--input-height);
}


